"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const http_1 = require("http");
const request_1 = require("./request");
const response_1 = require("./response");
const static_1 = require("./static");
const router_1 = require("./router");
const render_1 = require("./render");
const configs_1 = require("./configs");
/**
 * Global config instance
 * @private
 */
exports.configs = new configs_1.Configs();
/**
 * Flask class
 */
class Flask {
    /**
     * Create Flask instance
     * @param rootPath - app root path
     * @param options - Flask options
     */
    constructor(rootPath, options = {}) {
        exports.configs.setConfigs(rootPath, options);
        this.staticRex = new RegExp('^/' + exports.configs.flaskOptions.staticUrlPath + '/');
        this.render = render_1.createRender(exports.configs);
    }
    /**
     * Create Flask server
     */
    createServer() {
        let runTimeOptions = exports.configs.ServerRunningOptions;
        let staticServer = new static_1.Sever();
        return http_1.createServer((request, response) => {
            response.setHeader('server', 'node/flask');
            if (request.method === 'OPTIONS') {
                response.end();
            }
            else {
                let req = new request_1.Request(request);
                if (this.staticRex.test(req.pathname)) {
                    staticServer.serve(req, response);
                }
                else {
                    router_1.handleRouter(req, new response_1.Response(response, this.render));
                }
            }
            if (runTimeOptions.debug)
                console.log(`[${new Date()}] path: ${request.url} method: ${request.method}`);
        });
    }
    /**
     * Run Flask app
     * @param options
     */
    run(options) {
        options = options || {};
        exports.configs.setRunTime(options);
        let runTimeOptions = exports.configs.ServerRunningOptions;
        let server = this.createServer();
        server.listen(runTimeOptions.port, runTimeOptions.hostname);
        console.log(`Server is run on http://${runTimeOptions.hostname}:${runTimeOptions.port}`);
    }
}
exports.Flask = Flask;
//# sourceMappingURL=flask.js.map