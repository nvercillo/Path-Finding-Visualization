"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
/**
 * Global Configs Class
 * @private
 */
class Configs {
    constructor() {
        this.flaskOptions = {
            rootPath: '',
            staticUrlPath: '',
            staticRootPath: '',
            templatesPath: ''
        };
        this.staticServerOptions = {
            cache: 3600,
            gzip: true,
            headers: {}
        };
        this.ServerRunningOptions = {
            debug: false,
            port: 5050,
            hostname: 'localhost'
        };
    }
    setConfigs(rootPath, options) {
        let staticFolder = options.staticFolder || 'static';
        let staticUrlPath = options.staticUrlPath || 'static';
        let templateFolder = options.templateFolder || 'templates';
        if (path_1.normalize(staticUrlPath).indexOf('.') !== -1) {
            throw new RangeError(`static url path is over root path`);
        }
        let flaskOptions = this.flaskOptions;
        flaskOptions.rootPath = rootPath;
        flaskOptions.staticUrlPath = path_1.normalize(staticUrlPath).replace('\\', '/');
        flaskOptions.templatesPath = path_1.resolve(path_1.join(rootPath, templateFolder));
        flaskOptions.staticRootPath = path_1.resolve(path_1.join(rootPath, staticFolder));
        if (options.staticOptions) {
            this.staticServerOptions = Object.assign(this.staticServerOptions, options.staticOptions);
        }
    }
    setRunTime(options) {
        if (options) {
            this.ServerRunningOptions = Object.assign(this.ServerRunningOptions, options);
        }
    }
}
exports.Configs = Configs;
//# sourceMappingURL=configs.js.map