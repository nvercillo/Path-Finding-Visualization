/// <reference types="node" />
import { ServerResponse } from 'http';
import { RenderFunction } from './render';
/**
 * Response data
 */
export interface ResponseData {
    /**
     * HTTP response entiry data
     */
    entiry: string;
    /**
     * HTTP status code
     */
    status: number;
    /**
     * HTTP headers
     */
    headers: Object;
}
/**
 * Custom cookies
 */
export interface CookieValue {
    /**
     * Cookie key
     */
    key: string;
    /**
     * Cookie value
     */
    value: string;
    /**
     * Cookie maxAge
     */
    maxAge?: number;
    /**
     * Cookie expires
     */
    expires?: number;
    /**
     * Cookie domain
     */
    domain?: string;
    /**
     * Cookie path
     */
    path?: string;
}
/**
 * Flask Response class
 */
export declare class Response {
    private res;
    private _render;
    /**
     * Create Response instance
     * @param res
     * @param _render
     * @private
     */
    constructor(res: ServerResponse, _render: RenderFunction);
    /**
     * finish HTTP request
     * @param status - HTTP status code
     * @param headers - HTTP headers
     * @param entiry - HTTP response entiry data
     */
    private finish(status, headers, entiry?);
    /**
     * Abort this request and return status code.
     * @param status - HTTP code
     * @example
     * ```
     * res.abort();
     * ```
     */
    abort(status?: number): void;
    /**
     * End request with response.
     * @param response - response data
     * @param status - HTTP status code
     * @example
     * ```
     * res.end('Hello world');
     * ```
     */
    end(response: string | ResponseData, status?: number): void;
    /**
     * Redirect with url.
     * @param url
     * @example
     * ```
     * res.redirect('https://lleohao.github.io')
     * ```
     */
    redirect(url: string): void;
    /**
     * Render template
     * @param templatePath - template path
     * @param data - template dynamic data
     */
    render(templatePath: string, data?: Object): void;
    /**
     * Set cookies
     * @param cookies
     * @example
     * ```
     * res.setCookie([{key: 'name', value: 'lleohao'}])
     * ```
     */
    setCookie(...cookies: CookieValue[]): void;
}
