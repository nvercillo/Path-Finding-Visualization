"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Flask Response class
 */
class Response {
    /**
     * Create Response instance
     * @param res
     * @param _render
     * @private
     */
    constructor(res, _render) {
        this.res = res;
        this._render = _render;
        this.res = res;
        this._render = _render;
    }
    /**
     * finish HTTP request
     * @param status - HTTP status code
     * @param headers - HTTP headers
     * @param entiry - HTTP response entiry data
     */
    finish(status, headers, entiry) {
        let res = this.res;
        headers = Object.assign({ 'Content-Type': 'text/html' }, headers);
        res.writeHead(status, headers);
        if (entiry !== undefined)
            res.write(entiry);
        res.end();
    }
    /**
     * Abort this request and return status code.
     * @param status - HTTP code
     * @example
     * ```
     * res.abort();
     * ```
     */
    abort(status = 401) {
        this.finish(status, {});
    }
    /**
     * End request with response.
     * @param response - response data
     * @param status - HTTP status code
     * @example
     * ```
     * res.end('Hello world');
     * ```
     */
    end(response, status = 200) {
        let entiry;
        let headers = {};
        if (typeof response === 'string') {
            entiry = response;
        }
        else {
            entiry = response.entiry;
            headers = response.headers;
            status = response.status;
        }
        this.finish(status, headers, entiry);
    }
    /**
     * Redirect with url.
     * @param url
     * @example
     * ```
     * res.redirect('https://lleohao.github.io')
     * ```
     */
    redirect(url) {
        let status = 301;
        let headers = {
            Location: url
        };
        this.finish(status, headers);
    }
    /**
     * Render template
     * @param templatePath - template path
     * @param data - template dynamic data
     */
    render(templatePath, data) {
        let response = this._render(templatePath, data);
        this.end(response);
    }
    /**
     * Set cookies
     * @param cookies
     * @example
     * ```
     * res.setCookie([{key: 'name', value: 'lleohao'}])
     * ```
     */
    setCookie(...cookies) {
        cookies.forEach(data => {
            let cookie = `${data.key}=${data.value}; `;
            if (data.maxAge !== undefined)
                cookie += `Max-Age = ${data.maxAge}; `;
            if (data.domain !== undefined)
                cookie += `Domain  = ${data.domain}; `;
            if (data.expires !== undefined)
                cookie += `Expires = ${data.expires}; `;
            if (data.path !== undefined)
                cookie += `Path    = ${data.path}; `;
            this.res.setHeader('Set-Cookie', cookie);
        });
    }
}
exports.Response = Response;
//# sourceMappingURL=response.js.map