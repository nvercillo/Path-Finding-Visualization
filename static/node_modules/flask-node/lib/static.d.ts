/// <reference types="node" />
import { ServerResponse } from 'http';
import { Request } from './request';
import { HeaderValue } from './configs';
/**
 * Static server
 * @private
 */
export declare class Sever {
    root: string;
    options: {
        cache?: number | boolean;
        gzip?: boolean | RegExp;
        headers?: HeaderValue;
    };
    cache: number | boolean;
    defaultHeaders: HeaderValue;
    staticUrlPathLen: number;
    constructor();
    serve(req: Request, res: ServerResponse): void;
    private reslove(pathname);
    private finish(status, headers, req, res);
    private servePath(pathname, headers, req, res, finish);
    private gzipOk(req, contentType);
    private parseByteRange(req, stat);
    private respond(_headers, filename, stat, req, res, finish);
    private respondGzip(_headers, filename, contentType, _stat, req, res, finish);
    private respondNoGzip(_headers, filename, contentType, stat, req, res, finish);
    private stream(filename, length, startByte, res, callback);
}
